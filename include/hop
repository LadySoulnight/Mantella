#pragma once

#include <hop_bits/optimisationProblem.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/attractiveSectorFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/bentCigarFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/buecheRastriginFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/compositeGriewankRosenbrockFunctionF8F2.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/differentPowersFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/discusFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/ellipsoidalFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/ellipsoidalFunctionRotated.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/gallaghersGaussian101mePeaksFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/gallaghersGaussian21hiPeaksFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/katsuuraFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/linearSlope.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/lunacekBiRastriginFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/rastriginFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/rastriginFunctionRotated.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/rosenbrockFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/rosenbrockFunctionRotated.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/schaffersF7Function.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/schaffersF7FunctionIllConditioned.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/schwefelFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/sharpRidgeFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/sphereFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/stepEllipsoidalFunction.hpp>
#include <hop_bits/optimisationProblem/benchmark/blackBoxOptimisationBenchmark2013/weierstrassFunction.hpp>
#include <hop_bits/optimisationProblem/robotic/model.hpp>
#include <hop_bits/optimisationProblem/robotic/model/parallelKinematicMachine_3prpr.hpp>
#include <hop_bits/optimisationProblem/robotic/model/parallelKinematicMachine_3prrr.hpp>
#include <hop_bits/optimisationProblem/robotic/model/parallelKinematicMachine_6prus.hpp>
#include <hop_bits/optimisationProblem/robotic/model/parallelKinematicMachine_6pups.hpp>
#include <hop_bits/optimisationAlgorithm.hpp>
#include <hop_bits/optimisationAlgorithm/trajectoryBasedAlgorithm.hpp>
#include <hop_bits/optimisationAlgorithm/trajectoryBasedAlgorithm/hillClimbing.hpp>
#include <hop_bits/optimisationAlgorithm/trajectoryBasedAlgorithm/hookeJeevesAlgorithm.hpp>
#include <hop_bits/optimisationAlgorithm/trajectoryBasedAlgorithm/pureRandomSearch.hpp>
#include <hop_bits/optimisationAlgorithm/trajectoryBasedAlgorithm/simulatedAnnealing.hpp>
#include <hop_bits/optimisationAlgorithm/populationBasedAlgorithm.hpp>
#include <hop_bits/optimisationAlgorithm/populationBasedAlgorithm/roleBasedImitationAlgorithm.hpp>
#include <hop_bits/optimisationAlgorithm/populationBasedAlgorithm/standardParticleSwarmOptimisation2011.hpp>
#include <hop_bits/optimisationAlgorithm/populationBasedAlgorithm/parallelAlgorithm.hpp>
#include <hop_bits/optimisationAlgorithm/populationBasedAlgorithm/parallelAlgorithm/parallelStandardParticleSwarmOptimisation2011.hpp>
#include <hop_bits/propertiesAnalysis.hpp>
#include <hop_bits/propertiesAnalysis/functionModelAnalysis.hpp>
#include <hop_bits/propertiesAnalysis/functionModelAnalysis/linearModelAnalysis.hpp>
#include <hop_bits/propertiesAnalysis/functionModelAnalysis/linearModelAnalysis/linearOrdinaryLeastSquares.hpp>
#include <hop_bits/propertiesAnalysis/functionModelAnalysis/quadraticModelAnalysis.hpp>
#include <hop_bits/propertiesAnalysis/functionModelAnalysis/quadraticModelAnalysis/quadraticOrdinaryLeastSquares.hpp>
#include <hop_bits/propertiesAnalysis/lipschitzContinuityAnalysis.hpp>
#include <hop_bits/propertiesAnalysis/lipschitzContinuityAnalysis/completeLipschitzAnalysis.hpp>
#include <hop_bits/propertiesEstimation.hpp>
#include <hop_bits/propertiesEstimation/maximumLikelihoodEstimation.hpp>
#include <hop_bits/helper/cache.hpp>
#include <hop_bits/helper/cereal.hpp>
#include <hop_bits/helper/geometry.hpp>
#include <hop_bits/helper/printable.hpp>
#include <hop_bits/helper/quasiRandomSequence.hpp>
#include <hop_bits/helper/random.hpp>
#include <hop_bits/helper/regression.hpp>
#include <hop_bits/helper/rng.hpp>
#include <hop_bits/helper/string.hpp>
